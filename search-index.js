var searchIndex = JSON.parse('{\
"hs_builder_api":{"doc":"","t":"AAAAGDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDENDENNDNDDNDDLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMIKKKDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["block_metadata","builder","data_source","query_data","BlockHash","BlockMetadata","HashableBlock","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","commit","compare","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","get_hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","partial_cmp","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BlockAvailable","BlockAvailableSnafu","BlockClaim","BlockClaimSnafu","BuildError","Custom","CustomSnafu","Error","Error","Missing","MissingSnafu","NotFound","NotFoundSnafu","Options","Request","RequestSnafu","Snafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","api_path","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","augment_args","augment_args_for_update","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","define_api","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","extensions","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","header","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","message","message","resource","resource","serialize","serialize","source","source","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","message","message","resource","resource","source","source","source","status","BuilderDataSource","claim_block","get_available_blocks","submit_txn","AvailableBlocksQueryData","__clone_box","__clone_box","as_any","as_any_mut","blocks","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","partial_cmp","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"hs_builder_api"],[4,"hs_builder_api::block_metadata"],[61,"hs_builder_api::builder"],[357,"hs_builder_api::builder::BuildError"],[358,"hs_builder_api::builder::Error"],[365,"hs_builder_api::data_source"],[369,"hs_builder_api::query_data"],[407,"dyn_clone::sealed"],[408,"dyn_clone::sealed"],[409,"core::clone"],[410,"hotshot_types::traits::node_implementation"],[411,"core::cmp"],[412,"core::cmp"],[413,"core::result"],[414,"serde::de"],[415,"core::cmp"],[416,"core::fmt"],[417,"core::marker"],[418,"core::hash"],[419,"alloc::sync"],[420,"alloc::rc"],[421,"core::option"],[422,"core::cmp"],[423,"core::any"],[424,"clap_builder::builder::command"],[425,"snafu::backtrace_shim"],[426,"alloc::string"],[427,"core::convert"],[428,"tide_disco::status"],[429,"tide_disco::api"],[430,"tide_disco::api"],[431,"tide_disco::request"],[432,"clap_builder::parser::matches::arg_matches"],[433,"clap_builder"],[434,"clap_builder::util::id"],[435,"color_eyre::section"],[436,"core::fmt"],[437,"core::pin"],[438,"hotshot_types::data"],[439,"core::default"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BlockAvailable</code> …","","SNAFU context selector for the <code>Error::BlockClaim</code> variant","","","SNAFU context selector for the <code>Error::Custom</code> variant","","There was an error while trying to fetch the requested …","The requested resource exists but is not currently …","SNAFU context selector for the <code>BuildError::Missing</code> variant","The requested resource does not exist or is not known to …","SNAFU context selector for the <code>BuildError::NotFound</code> variant","","","SNAFU context selector for the <code>Error::Request</code> variant","SNAFU context selector for the <code>BuildError::Error</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional API specification files to merge with …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,5,5,10,5,10,5,10,5,10,5,5,5,5,10,5,10,10,5,10,5,5,10,5,5,5,5,5,5,5,10,5,5,5,10,5,10,5,10,5,10,5,10,5,5,5,5,10,5,10,5,10,5,10,5,36,0,36,0,0,36,0,0,34,34,0,34,0,0,36,0,0,37,37,38,38,39,39,34,34,44,44,45,45,46,46,42,42,36,36,47,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,34,36,47,47,34,36,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,37,38,39,42,34,36,37,38,39,34,44,45,46,42,36,37,38,39,34,44,45,46,42,36,47,0,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,34,36,34,36,47,37,38,39,34,44,45,46,42,36,47,37,38,39,42,37,38,39,34,34,44,45,46,42,36,36,47,37,38,39,34,44,45,46,42,36,36,36,47,47,47,34,36,34,36,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,37,38,39,44,45,46,42,39,42,45,46,34,36,34,36,42,37,38,39,34,44,45,46,42,36,34,36,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,47,37,38,39,34,44,45,46,42,36,47,47,47,37,38,39,34,44,45,46,42,36,66,67,68,69,70,68,69,67,0,71,71,71,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],"f":[0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1]]],[[5,[-1]]],[6,7]],[[-1,-2],2,[],[]],[[[5,[-1]],[5,[-1]]],8,[9,7]],[[[10,[-1]]],[[11,[[10,[-1]]]]],7],[[-1,-2],8,[],[]],[[],[[10,[-1]]],7],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[-1,[[13,[[5,[-2]]]]],14,7],[12,2],[12,2],[[[5,[-1]],[5,[-1]]],15,[16,7]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[5,[-1]],17],18,[19,7]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],20,[21,22],23],[[[5,[-1]],-2],2,[21,7],24],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[5,[-1]],[5,[-1]]],[[28,[8]]],[29,7]],[[[5,[-1]],-2],13,7,30],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,32,[]],[-1,32,[]],[33,33],[33,33],[34,[[28,[35]]]],[36,[[28,[35]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,34],[38,34],[[[39,[-1]]],34,[[41,[40]]]],[[[42,[-1,-2]]],36,[[41,[40]]],[[41,[43]]]],[34,[[28,[32]]]],[36,[[28,[32]]]],[37,37],[38,38],[[[39,[-1]]],[[39,[-1]]],6],[34,34],[44,44],[[[45,[-1]]],[[45,[-1]]],6],[[[46,[-1]]],[[46,[-1]]],6],[[[42,[-1,-2]]],[[42,[-1,-2]]],6,6],[36,36],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],47],[47,[[13,[[48,[-1,36]],49]]],[50,51,52]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[34,53],[36,53],[-1,[[13,[34]]],14],[-1,[[13,[36]]],14],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],0,[37,[[13,[-1,34]]],[]],[38,[[13,[-1,34]]],[]],[[[39,[-1]]],[[13,[-2,34]]],[[41,[40]]],[]],[[[42,[-1,-2]]],[[13,[-3,36]]],[[41,[40]]],[[41,[43]]],[]],[[37,17],18],[[38,17],18],[[[39,[-1]],17],18,19],[[34,17],18],[[34,17],18],[[44,17],18],[[[45,[-1]],17],18,19],[[[46,[-1]],17],18,19],[[[42,[-1,-2]],17],18,19,19],[[36,17],18],[[36,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[40,43]]],36],[54,36],[55,[[13,[47,56]]]],[55,[[13,[47,56]]]],[[],[[28,[57]]]],[[-1,-2],[[58,[-2,-3]]],[],[59,50,51],[]],[[-1,-2],[[58,[-2,-3]]],[],[59,50,51],[]],[-1,[],[]],[-1,[],[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[37,34],[38,34],[[[39,[-1]]],34,[[41,[40]]]],[44,36],[[[45,[-1]]],36,[[41,[40]]]],[[[46,[-1]]],36,[[41,[40]]]],[[[42,[-1,-2]]],36,[[41,[40]]],[[41,[43]]]],0,0,0,0,[[34,-1],13,30],[[36,-1],13,30],[34,[[28,[32]]]],[36,[[28,[32]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,40,[]],[-1,40,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[47,55],[[13,[2,56]]]],[[47,55],[[13,[2,56]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,[60,[-2]]],[[62,[[25,[61]]]]],[],[]],[[-1,63],[[62,[[25,[61]]]]],[]],[-1,[[62,[[25,[61]]]]],[]],0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[64,[-1]]],[[64,[-1]]],[6,7]],[[-1,-2],2,[],[]],[[[64,[-1]],[64,[-1]]],8,[9,7]],[[-1,-2],8,[],[]],[[],[[64,[-1]]],[65,7]],[12,-1,[]],[12,-1,[]],[-1,[[13,[[64,[-2]]]]],14,7],[12,2],[[[64,[-1]],[64,[-1]]],15,[16,7]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[64,[-1]],17],18,[19,7]],[-1,-1,[]],[[-1,-2],20,[21,22],23],[[[64,[-1]],-2],2,[21,7],24],[[],12],[-1,-2,[],[]],[[[25,[-1]]],[[25,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[64,[-1]],[64,[-1]]],[[28,[8]]],[29,7]],[[[64,[-1]],-2],13,7,30],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",407],[15,"tuple"],[3,"Private",407],[8,"Any",408],[3,"BlockMetadata",4],[8,"Clone",409],[8,"NodeType",410],[4,"Ordering",411],[8,"Ord",411],[3,"HashableBlock",4],[3,"Commitment",412],[15,"usize"],[4,"Result",413],[8,"Deserializer",414],[15,"bool"],[8,"PartialEq",411],[3,"Formatter",415],[6,"Result",415],[8,"Debug",415],[15,"u64"],[8,"Hash",416],[8,"Sized",417],[8,"BuildHasher",416],[8,"Hasher",416],[3,"Box",418],[3,"Arc",419],[3,"Rc",420],[4,"Option",421],[8,"PartialOrd",411],[8,"Serializer",422],[3,"TypeId",408],[8,"Error",423],[3,"Command",424],[4,"BuildError",61],[3,"Backtrace",425],[4,"Error",61],[3,"NotFoundSnafu",61],[3,"MissingSnafu",61],[3,"Snafu",61],[3,"String",426],[8,"Into",427],[3,"CustomSnafu",61],[4,"StatusCode",428],[3,"RequestSnafu",61],[3,"BlockAvailableSnafu",61],[3,"BlockClaimSnafu",61],[3,"Options",61],[3,"Api",429],[4,"ApiError",429],[8,"Send",417],[8,"Sync",417],[8,"ReadState",430],[15,"str"],[4,"RequestError",431],[3,"ArgMatches",432],[6,"Error",433],[3,"Id",434],[3,"IndentedSection",435],[8,"Display",415],[6,"BlockHash",4],[8,"Future",436],[3,"Pin",437],[6,"VidCommitment",438],[3,"AvailableBlocksQueryData",369],[8,"Default",439],[13,"Error",357],[13,"Custom",358],[13,"BlockAvailable",358],[13,"BlockClaim",358],[13,"Request",358],[8,"BuilderDataSource",365]],"b":[[211,"impl-Debug-for-BuildError"],[212,"impl-Display-for-BuildError"],[217,"impl-Display-for-Error"],[218,"impl-Debug-for-Error"],[229,"impl-From%3C(String,+StatusCode)%3E-for-Error"],[230,"impl-From%3CRequestError%3E-for-Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
